main.cpp
#include <iostream>
#include <math.h>
#include <iomanip>
#include "dod.h"
#include "sum.h"
#include "var.h"
using namespace std;
using namespace nsDod;
using namespace nsSum;
using namespace nsVar;


int main()
{
    cout << "x_p = "; cin >> x_p;
    cout << "x_k = "; cin >> x_k;
    cout << "dx = "; cin >> dx;
    cout << "e = "; cin >> e;

    for (x = x_p; x <= x_k + e; x += dx) {
        sum();
        cout << "arctg(x) = " << atan(x) << endl;
    }
}
var.h
#pragma once
namespace nsVar {
    extern int n;
    extern double x_p, x_k, dx, an, S, e, x;
};
var.cpp
namespace nsVar { // ïðîñò³ð ³ìåí
    int n;
    double x_p, x_k, dx, an, S, e, x;
};
dod.h
#pragma once
namespace nsDod {
	void dod();
};
dod.cpp
#include "dod.h"
#include "var.h" 
using namespace nsVar;
void nsDod::dod() {
	an *= x * x * (2.0 * n + 1.0) / (2.0 * n + 3.0);
}
sum.h
#pragma once
namespace nsSum {
	void sum();
};
sum.cpp 
#include <math.h>
#include "dod.h"
#include "sum.h"
#include "var.h" 
using namespace nsDod;
using namespace nsVar;

void nsSum::sum() {
    n = 0;
    an = 1;
    S = 0.0;
    do
    {
        S += an;
        dod();
        n++;
    } while (fabs(an) > e);
}
